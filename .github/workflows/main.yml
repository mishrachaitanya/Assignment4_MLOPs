name: CI - Iris Classifier with Report and Accuracy Gate

on:
  push:
    branches: [ "main", "master", "feature/ci", "feature/test-ci" ]
  pull_request:
    branches: [ "main", "master", "feature/ci", "feature/test-ci" ]
  workflow_dispatch:

permissions:
  contents: write          # needed for CML to comment
  pull-requests: write

jobs:
  test_model:
    runs-on: ubuntu-latest

    steps:
    # ───────────────────────── 1. CHECKOUT & PYTHON ──────────────────────────
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    # ──────────────────────── 2. DEPENDENCIES & CML ─────────────────────────
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up CML
      uses: iterative/setup-cml@v2

    # ─────────────────────────── 3. UNIT TESTS ──────────────────────────────
    - name: Run unit tests
      run: |
        python -m pytest -q | tee test_output.txt

    # ─────────────────────────── 4. TRAIN MODEL ─────────────────────────────
    - name: Train model and generate metrics
      run: |
        python train.py --model-path model.joblib --metrics-path metrics.csv

    # ───────────────── 5. FAIL WORKFLOW IF ACCURACY TOO LOW ─────────────────
    - name: Fail if accuracy below threshold
      id: accuracy_check
      run: |
        THRESHOLD=0.90                       # ← change as required
        LAST_ACC=$(tail -n 1 metrics.csv | cut -d',' -f2)
        echo "Final-epoch accuracy: $LAST_ACC  (threshold $THRESHOLD)"
        # compare as floats
        if [ "$(echo "$LAST_ACC < $THRESHOLD" | bc -l)" -eq 1 ]; then
          echo "❌ Accuracy below threshold - failing the job."
          exit 1
        else
          echo "✅ Accuracy meets threshold."
        fi

    # ──────────────────────── 6. POST CML REPORT ────────────────────────────
    - name: Create and post CML report
      if: always()                      # run even if tests fail, but job already fails above on low acc
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "# Iris Model Report" > report.md

        echo "## Test Output" >> report.md
        echo '```' >> report.md
        cat test_output.txt >> report.md
        echo '```' >> report.md

        echo "## Training Metrics (Accuracy & Loss per Epoch)" >> report.md
        echo '| Epoch | Accuracy | Loss |' >> report.md
        echo '|-------|----------|------|' >> report.md
        tail -n +2 metrics.csv | while IFS=',' read -r epoch acc loss; do
          echo "| $epoch | $acc | $loss |" >> report.md
        done

        cml comment create report.md
